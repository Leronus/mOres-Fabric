plugins {
	id 'fabric-loom' version '1.5-SNAPSHOT'
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	maven {
		url = 'https://maven.minecraftforge.net/'
	}
	maven {
		url = 'https://api.modrinth.com/maven'
	}
	maven {
		url = 'https://maven.kyrptonaught.dev'
	}
	maven {
		url = 'https://jitpack.io'
	}
	maven {
		url = 'https://maven.terraformersmc.com/releases/'
	}
	maven {
		url = "https://api.modrinth.com/maven"
	}
	maven {
		url = "https://cursemaven.com"
	}
	maven {
		name = 'ParchmentMC'
		url = 'https://maven.parchmentmc.org'
	}
}

loom {
    splitEnvironmentSourceSets()

	mods {
		"mores" {
			sourceSet sourceSets.main
			sourceSet sourceSets.client
		}
	}

}

fabricApi {
	configureDataGeneration()
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"



	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	modImplementation "maven.modrinth:sodium:mc1.20.1-0.5.3"
	modImplementation "maven.modrinth:lithium:mc1.20.1-0.11.2"

	//Iris
	modImplementation "maven.modrinth:YL57xq9U:ogjxrwGQ"
	//Indium
	modImplementation "maven.modrinth:Orvt0mRa:Lue6O9z9"
	//EntityCulling
	modImplementation "maven.modrinth:NNAgCjsB:BDwHAdWc"
	//Continuity
	modImplementation "maven.modrinth:1IjD5062:Z9FJWLMt"
//	//Bobby
//	modImplementation "maven.modrinth:M08ruV16:2cuVyTav"
	//Nvidium
	modImplementation "maven.modrinth:SfMw2IZN:UO1crPGk"

	//Custom Shields
	modImplementation "com.github.CrimsonDawn45:Fabric-Shield-Lib:v${project.fabric_shield_lib_version}"
	modImplementation "com.terraformersmc:modmenu:${project.mod_menu_version}"
	modImplementation "maven.modrinth:midnightlib:${project.midnightlib_version}"
	modImplementation "com.github.Chocohead:Fabric-ASM:v${project.fabricasm_version}"

	//CustomPortalAPI
	modImplementation 'net.kyrptonaught:customportalapi:0.0.1-beta64-1.20'
	include 'net.kyrptonaught:customportalapi:0.0.1-beta64-1.20'

	modImplementation "net.fabricmc.fabric-api:fabric-api-deprecated:${project.fabric_version}"

	//XRay
	modImplementation "curse.maven:advanced-xray-fabric-edition-444663:4595168"
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}